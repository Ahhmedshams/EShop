
services:
  # PostgreSQL database for User service
  user.db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: UserDb
    ports:
      - "5432:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - eshop

  # Redis cache for User service
  user.cache:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - user-cache-data:/data
    networks:
      - eshop

  # RabbitMQ for messaging
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"  # RabbitMQ port
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - eshop

  # Observability Stack
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
    ports:
      - 1888:1888 # pprof extension
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    depends_on:
      - jaeger
      - prometheus

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686" # Jaeger Web UI

volumes:
  user-db-data:
  user-cache-data:

networks:
  eshop:
    name: eshop